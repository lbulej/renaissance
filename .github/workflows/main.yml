name: Main
on:
  push:
    branches: [master]
  pull_request:
env:
  COURSIER_CACHE: ${{ github.workspace }}/.cache/coursier
jobs:
  checks:
    runs-on: ubuntu-latest
    container: "ghcr.io/renaissance-benchmarks/renaissance-buildenv:v7-openjdk21"
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fix Git safe directory
        shell: bash
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Coursier downloads cache
        uses: actions/cache@v3
        with:
          key: coursier_cache-${{ runner.os }}-${{ hashFiles('build.sbt') }}
          path: ${{ env.COURSIER_CACHE }}

      - name: Check file encoding
        shell: bash
        run: tools/ci/check-encoding.sh

      - name: Check source code formatting
        shell: bash
        run: tools/ci/check-formatting.sh

      - name: Build the base bundle
        shell: bash
        run: tools/ci/build-base.sh

      - name: Check generated files are up-to-date
        shell: bash
        run: tools/ci/check-markdown.sh

  linux:
    runs-on: ubuntu-latest
    container: "ghcr.io/renaissance-benchmarks/renaissance-buildenv:v7-openjdk21"
    continue-on-error: true
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fix Git safe directory
        shell: bash
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Environment configuration
        shell: bash
        run: tools/ci/pre-show-env.sh

      - name: Coursier downloads cache
        uses: actions/cache@v3
        with:
          key: coursier_cache-${{ runner.os }}-${{ hashFiles('build.sbt') }}
          path: ${{ env.COURSIER_CACHE }}

      - name: Build both base & JMH bundles
        shell: bash
        run: tools/ci/build-both.sh

      - name: Check JMH bundle
        shell: bash
        run: tools/ci/check-jmh.sh

      - name: Run the suite
        shell: bash
        run: tools/ci/bench-base.sh

      - name: Run the suite in standalone mode
        shell: bash
        run: tools/ci/bench-standalone.sh

      - name: Run the suite with JMH
        shell: bash
        run: tools/ci/bench-jmh.sh

  macos:
    runs-on: macos-latest
    continue-on-error: true
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fix Git safe directory
        shell: bash
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Fetch JDK 21
        run: |
          aria2c -d ${{ runner.temp }} -o openjdk-21_macos-x64_bin.tar.gz https://download.java.net/java/GA/jdk21.0.1/415e3f918a1f4062a0074a2794853d0d/12/GPL/openjdk-21.0.1_macos-x64_bin.tar.gz

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: jdkfile
          jdkFile: ${{ runner.temp }}/openjdk-21_macos-x64_bin.tar.gz

      - name: Environment configuration
        shell: bash
        run: tools/ci/pre-show-env.sh

      - name: Coursier downloads cache
        uses: actions/cache@v3
        with:
          key: coursier_cache-${{ runner.os }}-${{ hashFiles('build.sbt') }}
          path: ${{ env.COURSIER_CACHE }}

      - name: Build both base & JMH bundles
        shell: bash
        run: tools/ci/build-both.sh

      - name: Check JMH bundle
        shell: bash
        run: tools/ci/check-jmh.sh

      - name: Dummy run and environment configuration
        shell: bash
        run: tools/ci/bench-show-env.sh

      - name: Run the suite
        shell: bash
        run: tools/ci/bench-base.sh

      - name: Run the suite in standalone mode
        shell: bash
        run: tools/ci/bench-standalone.sh

      - name: Run the suite with JMH
        shell: bash
        run: tools/ci/bench-jmh.sh

  windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fix Git safe directory
        shell: bash
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Fetch JDK 21
        run: |
          aria2c -d ${{ runner.temp }} -o openjdk-21_windows-x64_bin.zip https://download.java.net/java/GA/jdk21.0.1/415e3f918a1f4062a0074a2794853d0d/12/GPL/openjdk-21.0.1_windows-x64_bin.zip

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: jdkfile
          jdkFile: ${{ runner.temp }}/openjdk-21_windows-x64_bin.zip

      - name: Environment configuration
        shell: bash
        run: tools/ci/pre-show-env.sh

      - name: Coursier downloads cache
        uses: actions/cache@v3
        with:
          key: coursier_cache-${{ runner.os }}-${{ hashFiles('build.sbt') }}
          path: ${{ env.COURSIER_CACHE }}

      - name: Build both base & JMH bundles
        shell: bash
        run: tools/ci/build-both.sh

      - name: Check JMH bundle
        shell: bash
        run: tools/ci/check-jmh.sh

      - name: Dummy run and environment configuration
        shell: bash
        run: tools/ci/bench-show-env.sh

      - name: Run the suite
        shell: bash
        run: tools/ci/bench-base.sh

      - name: Run the suite in standalone mode
        shell: bash
        run: tools/ci/bench-standalone.sh

      - name: Run the suite with JMH
        shell: bash
        run: tools/ci/bench-jmh.sh

  plugins:
    runs-on: ubuntu-latest
    needs: linux
    container: "ghcr.io/renaissance-benchmarks/renaissance-buildenv:v7-openjdk11-with-ant-gcc"
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fix Git safe directory
        shell: bash
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Environment configuration
        shell: bash
        run: tools/ci/pre-show-env.sh

      - name: Coursier downloads cache
        uses: actions/cache@v3
        with:
          key: coursier_cache-${{ runner.os }}-${{ hashFiles('build.sbt') }}
          path: ${{ env.COURSIER_CACHE }}

      - name: Build base
        shell: bash
        run: tools/ci/build-base.sh

      - name: Build plugins
        shell: bash
        run: tools/ci/build-plugins.sh

      - name: Run the suite with all plugins
        shell: bash
        run: tools/ci/bench-plugins.sh

  linux-jdks:
    needs: linux
    strategy:
      matrix:
        image:
          - openjdk11
          - openjdk17
          - openj9-openjdk11
          - openj9-openjdk17
    runs-on: ubuntu-latest
    continue-on-error: true
    container: "ghcr.io/renaissance-benchmarks/renaissance-buildenv:v7-${{ matrix.image }}"
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fix Git safe directory
        shell: bash
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Environment configuration
        shell: bash
        run: tools/ci/pre-show-env.sh

      - name: Coursier downloads cache
        uses: actions/cache@v3
        with:
          key: coursier_cache-${{ runner.os }}-${{ hashFiles('build.sbt') }}
          path: ${{ env.COURSIER_CACHE }}

      - name: Build base & JMH bundles
        shell: bash
        run: tools/ci/build-both.sh

      - name: Check JMH bundle
        shell: bash
        run: tools/ci/check-jmh.sh

      - name: Run the suite
        shell: bash
        run: tools/ci/bench-base.sh

      - name: Run the suite in standalone mode
        shell: bash
        run: tools/ci/bench-standalone.sh

      - name: Run the suite with JMH
        shell: bash
        run: tools/ci/bench-jmh.sh


  windows-legacy:
    needs: windows
    strategy:
      matrix:
        java: [ '11', '17' ]
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fix Git safe directory
        shell: bash
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Setup correct Java version
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: ${{ matrix.java }}

      - name: Environment configuration
        shell: bash
        run: tools/ci/pre-show-env.sh

      - name: Coursier downloads cache
        uses: actions/cache@v3
        with:
          key: coursier_cache-${{ runner.os }}-${{ hashFiles('build.sbt') }}
          path: ${{ env.COURSIER_CACHE }}

      - name: Build both base & JMH bundles
        shell: bash
        run: tools/ci/build-both.sh

      - name: Check JMH bundle
        shell: bash
        run: tools/ci/check-jmh.sh

      - name: Dummy run and environment configuration
        shell: bash
        run: tools/ci/bench-show-env.sh

      - name: Run the suite
        shell: bash
        run: tools/ci/bench-base.sh

      - name: Run the suite in standalone mode
        shell: bash
        run: tools/ci/bench-standalone.sh

      - name: Run the suite with JMH
        shell: bash
        run: tools/ci/bench-jmh.sh

  macos-legacy:
    needs: macos
    strategy:
      matrix:
        java: [ '11', '17' ]
    runs-on: macos-latest
    continue-on-error: true
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fix Git safe directory
        shell: bash
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Setup correct Java version
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: ${{ matrix.java }}

      - name: Environment configuration
        shell: bash
        run: tools/ci/pre-show-env.sh

      - name: Coursier downloads cache
        uses: actions/cache@v3
        with:
          key: coursier_cache-${{ runner.os }}-${{ hashFiles('build.sbt') }}
          path: ${{ env.COURSIER_CACHE }}

      - name: Build both base & JMH bundles
        shell: bash
        run: tools/ci/build-both.sh

      - name: Check JMH bundle
        shell: bash
        run: tools/ci/check-jmh.sh

      - name: Dummy run and environment configuration
        shell: bash
        run: tools/ci/bench-show-env.sh

      - name: Run the suite
        shell: bash
        run: tools/ci/bench-base.sh

      - name: Run the suite in standalone mode
        shell: bash
        run: tools/ci/bench-standalone.sh

      - name: Run the suite with JMH
        shell: bash
        run: tools/ci/bench-jmh.sh
